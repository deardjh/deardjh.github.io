<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jhai.Dai&#39;s  Blog</title>
  <icon>https://www.gravatar.com/avatar/e721fd547c758fa583ccd2314bc734ff</icon>
  <subtitle>不积跬步无以至千里，不积小流无以成江海</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://deardjh.github.io/"/>
  <updated>2019-03-30T05:56:58.257Z</updated>
  <id>https://deardjh.github.io/</id>
  
  <author>
    <name>Jhai.Dai</name>
    <email>jhai.dear@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Chrome-好用的插件</title>
    <link href="https://deardjh.github.io/2019/03/30/Chrome-%E5%A5%BD%E7%94%A8%E7%9A%84%E6%8F%92%E4%BB%B6/"/>
    <id>https://deardjh.github.io/2019/03/30/Chrome-好用的插件/</id>
    <published>2019-03-30T05:30:20.000Z</published>
    <updated>2019-03-30T05:56:58.257Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#easy-to-rss">Easy to RSS</a></li><li><a href="#cvim">cVim</a></li><li><a href="#idm-integration-module">IDM Integration Module</a></li><li><a href="#infinity">Infinity</a></li><li><a href="#onetab">OneTab</a></li><li><a href="#octotree">Octotree</a></li><li><a href="#xpath-helper">XPath Helper</a></li><li><a href="#open-in-colab">Open in Colab</a></li><li><a href="#sourcegraph">Sourcegraph</a></li></ul><!-- tocstop --><p></div></p><h2><span id="easy-to-rss">Easy to RSS</span><a href="#easy-to-rss" class="header-anchor">#</a></h2><blockquote><p>Retreive RSS feeds URLs from WebSite, RSSHub supported</p></blockquote><h2><span id="cvim">cVim</span><a href="#cvim" class="header-anchor">#</a></h2><blockquote><p>An extension adding Vim-like bindings to Google Chrome</p></blockquote><h2><span id="idm-integration-module">IDM Integration Module</span><a href="#idm-integration-module" class="header-anchor">#</a></h2><blockquote><p>Download files with Internet Download Manager</p></blockquote><h2><span id="infinity">Infinity</span><a href="#infinity" class="header-anchor">#</a></h2><blockquote><p>百万用户选择的新标签页和快速拨号，自由添加网站图标，云端高清壁纸，快速访问书签、天气、笔记、待办事项、扩展管理与历史记录</p></blockquote><h2><span id="onetab">OneTab</span><a href="#onetab" class="header-anchor">#</a></h2><blockquote><p>节省高达95％的内存，并减轻标签页混乱现象</p></blockquote><h2><span id="octotree">Octotree</span><a href="#octotree" class="header-anchor">#</a></h2><blockquote><p>Code tree for GitHub</p></blockquote><h2><span id="xpath-helper">XPath Helper</span><a href="#xpath-helper" class="header-anchor">#</a></h2><blockquote><p>Extract, edit, and evaluate XPath queries with ease.</p></blockquote><h2><span id="open-in-colab">Open in Colab</span><a href="#open-in-colab" class="header-anchor">#</a></h2><blockquote><p>Open a Github-hosted notebook in Google Colab</p></blockquote><h2><span id="sourcegraph">Sourcegraph</span><a href="#sourcegraph" class="header-anchor">#</a></h2><blockquote><p>Code intelligence for your code host and code reviews: hovers, documentation, definitions, and references in files, PRs, and diffs</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#easy-to-rss&quot;&gt;Easy to RSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#cvim&quot;&gt;cVim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#idm-int
      
    
    </summary>
    
      <category term="Python" scheme="https://deardjh.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://deardjh.github.io/tags/Python/"/>
    
      <category term="Tools" scheme="https://deardjh.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>Python 好用的包</title>
    <link href="https://deardjh.github.io/2019/03/30/Python-%E5%A5%BD%E7%94%A8%E7%9A%84%E5%8C%85/"/>
    <id>https://deardjh.github.io/2019/03/30/Python-好用的包/</id>
    <published>2019-03-30T05:07:50.000Z</published>
    <updated>2019-03-30T05:41:17.479Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#matplotlib">Matplotlib</a></li><li><a href="#seaborn">Seaborn</a></li><li><a href="#plotly">Plotly</a></li><li><a href="#pycharts">PyCharts</a></li><li><a href="#dash">Dash</a></li><li><a href="#python-goose">python-goose</a></li><li><a href="#tqdm">tqdm</a></li><li><a href="#loguru">loguru</a></li><li><a href="#ds-cheatsheets">ds-cheatsheets</a></li><li><a href="#scrapydweb">scrapydweb</a></li></ul><!-- tocstop --></div><h2><span id="matplotlib">Matplotlib</span><a href="#matplotlib" class="header-anchor">#</a></h2><ul><li><a href="https://www.baidu.com/link?url=HXk3x4Z275ld5Y_Cy2eXi58S7L5ex_h_3jNjv2ye_WA5jZmxYSA4g6CLFWjGWOl2&amp;wd=&amp;eqid=fead2e760000ece6000000025c9f0049" target="_blank" rel="noopener">Matplotlib</a></li></ul><h2><span id="seaborn">Seaborn</span><a href="#seaborn" class="header-anchor">#</a></h2><ul><li><a href="https://www.baidu.com/link?url=lmJpD7PAqf6N2CgKMTz1wlllJgfX7b6lQEmk_6P78F-dr8sp6q94XFLiUb76sCck&amp;wd=&amp;eqid=f41f2e390000cbbd000000025c9f0065" target="_blank" rel="noopener">Seaborn</a></li></ul><h2><span id="plotly">Plotly</span><a href="#plotly" class="header-anchor">#</a></h2><ul><li><a href="https://www.baidu.com/link?url=EFoDs0y7uVDJPCezUzBdAGH2tJXzS4V3Pv7hsg5QFpRGp-Q4TmaBooYpK9kHfXiX&amp;wd=&amp;eqid=e7503f6c00016133000000025c9f0078" target="_blank" rel="noopener">Plotly</a></li></ul><h2><span id="pycharts">PyCharts</span><a href="#pycharts" class="header-anchor">#</a></h2><ul><li><a href="https://www.baidu.com/link?url=fkS8Msl6v8bwP2uT1hj8XsYvMqXoABRbtLIqlJ2sF9C&amp;wd=&amp;eqid=d0f14d01000057bc000000025c9f00a0" target="_blank" rel="noopener">Pycharts</a></li></ul><h2><span id="dash">Dash</span><a href="#dash" class="header-anchor">#</a></h2><ul><li><a href="https://github.com/plotly/dash" target="_blank" rel="noopener">Dash</a></li><li>一款只用几百行 Python 代码就可以轻易实现数据分析可视化的利器，是目前 Python 社区数据可视化主要的工具之一。具有：使用简单、易于扩展、开发团队活跃等特点 </li></ul><h2><span id="python-goose">python-goose</span><a href="#python-goose" class="header-anchor">#</a></h2><ul><li><a href="https://github.chttps://www.baidu.com/link?url=fkS8Msl6v8bwP2uT1hj8XsYvMqXoABRbtLIqlJ2sF9C&amp;wd=&amp;eqid=d0f14d01000057bc000000025c9f00a0om/grangier/python-goose" target="_blank" rel="noopener">python-goose</a></li><li>Goose 用于文章提取器，提取中文内容<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> goose <span class="keyword">import</span> Goose</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> goose.text <span class="keyword">import</span> StopWordsChinese</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>url  = <span class="string">'http://www.bbc.co.uk/zhongwen/simp/chinese_news/2012/12/121210_hongkong_politics.shtml'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>g = Goose(&#123;<span class="string">'stopwords_class'</span>: StopWordsChinese&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>article = g.extract(url=url)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> article.cleaned_text[:<span class="number">150</span>]</span><br><span class="line">香港行政长官梁振英在各方压力下就其大宅的违章建筑（僭建）问题到立法会接受质询，并向香港民众道歉。</span><br></pre></td></tr></table></figure></li></ul><h2><span id="tqdm">tqdm</span><a href="#tqdm" class="header-anchor">#</a></h2><ul><li><a href="https://github.com/tqdm/tqdm" target="_blank" rel="noopener">tqdm</a></li><li>强大、快速、易扩展的 Python 进度条库<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tqdm(range(<span class="number">10000</span>)):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># 输出结果：</span></span><br><span class="line"><span class="comment"># 76%|████████████████████████████         | 7568/10000 [00:33&lt;00:10, 229.00it/s]</span></span><br></pre></td></tr></table></figure></li></ul><h2><span id="loguru">loguru</span><a href="#loguru" class="header-anchor">#</a></h2><ul><li><a href="https://github.com/Delgan/loguru" target="_blank" rel="noopener">loguru</a></li><li>一个让Python日志变得简单的库<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> loguru</span><br><span class="line">&gt;&gt;&gt;loguru.logger.info(<span class="string">'test'</span>)</span><br><span class="line"><span class="number">2019</span><span class="number">-03</span><span class="number">-30</span> <span class="number">13</span>:<span class="number">28</span>:<span class="number">48.327</span> | INFO     | __main__:&lt;module&gt;:<span class="number">1</span> - test</span><br><span class="line">&gt;&gt;&gt;loguru.logger.debug(<span class="string">'test'</span>)</span><br><span class="line"><span class="number">2019</span><span class="number">-03</span><span class="number">-30</span> <span class="number">13</span>:<span class="number">28</span>:<span class="number">48.327</span> | DEBUG     | __main__:&lt;module&gt;:<span class="number">1</span> - test</span><br><span class="line">&gt;&gt;&gt;loguru.logger.error(<span class="string">'test'</span>)</span><br><span class="line"><span class="number">2019</span><span class="number">-03</span><span class="number">-30</span> <span class="number">13</span>:<span class="number">28</span>:<span class="number">48.327</span> | ERROR     | __main__:&lt;module&gt;:<span class="number">1</span> - test</span><br></pre></td></tr></table></figure></li></ul><h2><span id="ds-cheatsheets">ds-cheatsheets</span><a href="#ds-cheatsheets" class="header-anchor">#</a></h2><ul><li><a href="https://github.com/FavioVazquez/ds-cheatsheets" target="_blank" rel="noopener">ds-cheatsheets</a></li><li>Python 在数据科学方面使用库的速查表，包含了 Pandas、Jupyter、SQL、Dask 等。虽然都是些基本的 API 调用，但是用来备忘和速查足以。</li></ul><h2><span id="scrapydweb">scrapydweb</span><a href="#scrapydweb" class="header-anchor">#</a></h2><ul><li><a href="https://github.com/my8100/scrapydweb" target="_blank" rel="noopener">scrapydweb</a></li><li>Scrapy 爬虫管理平台，支持：Scrapyd 集群管理、日志可视化、定时任务、邮件通知、移动端 UI</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#matplotlib&quot;&gt;Matplotlib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#seaborn&quot;&gt;Seaborn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#plo
      
    
    </summary>
    
      <category term="Python" scheme="https://deardjh.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://deardjh.github.io/tags/Python/"/>
    
      <category term="Tools" scheme="https://deardjh.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>Graph Convolution over Pruned Dependency Trees Improves Relation Extraction</title>
    <link href="https://deardjh.github.io/2019/03/29/Graph%20Convolution%20over%20Pruned%20Dependency%20Trees%20Improves%20Relation%20Extraction/"/>
    <id>https://deardjh.github.io/2019/03/29/Graph Convolution over Pruned Dependency Trees Improves Relation Extraction/</id>
    <published>2019-03-29T12:07:12.000Z</published>
    <updated>2019-03-30T05:14:31.856Z</updated>
    
    <content type="html"><![CDATA[<p>论文：Graph Convolution over Pruned Dependency Trees Improves Relation Extraction<br>作者：Yuhao Zhang,<em> Peng Qi,</em> Christopher D. Manning<br>时间：1809<br>单位：Stanford University<br>会议：EMNLP<br>代码链接：无</p><h2><span id="zhai-yao">摘要</span><a href="#zhai-yao" class="header-anchor">#</a></h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>句子依赖树能够帮助关系提取模型捕获远距离关系。</span><br><span class="line"><span class="number">2.</span>但是, 现有的基于依赖的模型要么过于激进地修剪依赖关系树, 从而忽略了关键信息 (例如否定), 要么由于难以在不同的树结构上并行化而在配置上效率低下。</span><br><span class="line"><span class="number">3.</span>本文提出了一种为关系提取量身定制的图形卷积网络的扩展, 它能有效地同时将任意依赖结构上的信息汇集在一起。</span><br><span class="line">    <span class="number">3.1</span>为了在最大限度地删除不相关内容的同时整合相关信息, 本文进一步将一种新的修剪策略应用于输入树, 方法是将单词紧跟在关系可能存在的两个实体之间的最短路径周围。</span><br><span class="line"><span class="number">4.</span>由此产生的模型在大型TAC代价数据集上实现了最先进的性能, 优于现有序列和基于依赖的神经模型。通过详细的分析, 结果还表明该模型具有对序列模型的互补优势, 并将其结合起来, 进一步改善了最新的水平</span><br></pre></td></tr></table></figure><div class="pdf" target="pdf.pdf" height></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;论文：Graph Convolution over Pruned Dependency Trees Improves Relation Extraction&lt;br&gt;作者：Yuhao Zhang,&lt;em&gt; Peng Qi,&lt;/em&gt; Christopher D. Mannin
      
    
    </summary>
    
      <category term="论文" scheme="https://deardjh.github.io/categories/%E8%AE%BA%E6%96%87/"/>
    
    
      <category term="Relation Extraction" scheme="https://deardjh.github.io/tags/Relation-Extraction/"/>
    
      <category term="Graph Convolution Network" scheme="https://deardjh.github.io/tags/Graph-Convolution-Network/"/>
    
  </entry>
  
  <entry>
    <title>Linux 常用命令小结</title>
    <link href="https://deardjh.github.io/2019/03/28/cs_notes_linux/"/>
    <id>https://deardjh.github.io/2019/03/28/cs_notes_linux/</id>
    <published>2019-03-28T08:00:00.000Z</published>
    <updated>2019-03-30T02:12:40.001Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#yi-chang-yong-cao-zuo-yi-ji-gai-nian">一、常用操作以及概念</a><ul><li><a href="#kuai-jie-jian">快捷键</a></li><li><a href="#qiu-zhu">求助</a><ul><li><a href="#1-help">1. –help</a></li><li><a href="#2-man">2. man</a></li><li><a href="#3-info">3. info</a></li><li><a href="#4-doc">4. doc</a></li></ul></li><li><a href="#guan-ji">关机</a><ul><li><a href="#1-who">1. who</a></li><li><a href="#2-sync">2. sync</a></li><li><a href="#3-shutdown">3. shutdown</a></li></ul></li><li><a href="#path">PATH</a></li><li><a href="#sudo">sudo</a></li><li><a href="#bao-guan-li-gong-ju">包管理工具</a></li><li><a href="#fa-xing-ban">发行版</a></li><li><a href="#vim-san-ge-mo-shi">VIM 三个模式</a></li><li><a href="#gnu">GNU</a></li><li><a href="#kai-yuan-xie-yi">开源协议</a></li></ul></li><li><a href="#er-ci-pan">二、磁盘</a><ul><li><a href="#ci-pan-jie-kou">磁盘接口</a><ul><li><a href="#1-ide">1. IDE</a></li><li><a href="#2-sata">2. SATA</a></li><li><a href="#3-scsi">3. SCSI</a></li><li><a href="#4-sas">4. SAS</a></li></ul></li><li><a href="#ci-pan-de-wen-jian-ming">磁盘的文件名</a></li></ul></li><li><a href="#san-fen-qu">三、分区</a><ul><li><a href="#fen-qu-biao">分区表</a><ul><li><a href="#1-mbr">1. MBR</a></li><li><a href="#2-gpt">2. GPT</a></li></ul></li><li><a href="#kai-ji-jian-ce-cheng-xu">开机检测程序</a><ul><li><a href="#1-bios">1. BIOS</a></li><li><a href="#2-uefi">2. UEFI</a></li></ul></li></ul></li><li><a href="#si-wen-jian-xi-tong">四、文件系统</a><ul><li><a href="#fen-qu-yu-wen-jian-xi-tong">分区与文件系统</a></li><li><a href="#zu-cheng">组成</a></li><li><a href="#wen-jian-du-qu">文件读取</a></li><li><a href="#ci-pan-sui-pian">磁盘碎片</a></li><li><a href="#block">block</a></li><li><a href="#inode">inode</a></li><li><a href="#mu-lu">目录</a></li><li><a href="#ri-zhi">日志</a></li><li><a href="#gua-zai">挂载</a></li><li><a href="#mu-lu-pei-zhi">目录配置</a></li></ul></li><li><a href="#wu-wen-jian">五、文件</a><ul><li><a href="#wen-jian-shu-xing">文件属性</a></li><li><a href="#wen-jian-yu-mu-lu-de-ji-ben-cao-zuo">文件与目录的基本操作</a><ul><li><a href="#1-ls">1. ls</a></li><li><a href="#2-cd">2. cd</a></li><li><a href="#3-mkdir">3. mkdir</a></li><li><a href="#4-rmdir">4. rmdir</a></li><li><a href="#5-touch">5. touch</a></li><li><a href="#6-cp">6. cp</a></li><li><a href="#7-rm">7. rm</a></li><li><a href="#8-mv">8. mv</a></li></ul></li><li><a href="#xiu-gai-quan-xian">修改权限</a></li><li><a href="#wen-jian-mo-ren-quan-xian">文件默认权限</a></li><li><a href="#mu-lu-de-quan-xian">目录的权限</a></li><li><a href="#lian-jie">链接</a><ul><li><a href="#1-shi-ti-lian-jie">1. 实体链接</a></li><li><a href="#2-fu-hao-lian-jie">2. 符号链接</a></li></ul></li><li><a href="#huo-qu-wen-jian-nei-rong">获取文件内容</a><ul><li><a href="#1-cat">1. cat</a></li><li><a href="#2-tac">2. tac</a></li><li><a href="#3-more">3. more</a></li><li><a href="#4-less">4. less</a></li><li><a href="#5-head">5. head</a></li><li><a href="#6-tail">6. tail</a></li><li><a href="#7-od">7. od</a></li></ul></li><li><a href="#zhi-ling-yu-wen-jian-sou-suo">指令与文件搜索</a><ul><li><a href="#1-which">1. which</a></li><li><a href="#2-whereis">2. whereis</a></li><li><a href="#3-locate">3. locate</a></li><li><a href="#4-find">4. find</a></li></ul></li></ul></li><li><a href="#liu-ya-suo-yu-da-bao">六、压缩与打包</a><ul><li><a href="#ya-suo-wen-jian-ming">压缩文件名</a></li><li><a href="#ya-suo-zhi-ling">压缩指令</a><ul><li><a href="#1-gzip">1. gzip</a></li><li><a href="#2-bzip2">2. bzip2</a></li><li><a href="#3-xz">3. xz</a></li></ul></li><li><a href="#da-bao">打包</a></li></ul></li><li><a href="#qi-bash">七、Bash</a><ul><li><a href="#te-xing">特性</a></li><li><a href="#bian-liang-cao-zuo">变量操作</a></li><li><a href="#zhi-ling-sou-suo-shun-xu">指令搜索顺序</a></li><li><a href="#shu-ju-liu-chong-ding-xiang">数据流重定向</a></li></ul></li><li><a href="#ba-guan-dao-zhi-ling">八、管道指令</a><ul><li><a href="#ti-qu-zhi-ling">提取指令</a></li><li><a href="#pai-xu-zhi-ling">排序指令</a></li><li><a href="#shuang-xiang-shu-chu-chong-ding-xiang">双向输出重定向</a></li><li><a href="#zi-fu-zhuan-huan-zhi-ling">字符转换指令</a></li><li><a href="#fen-qu-zhi-ling">分区指令</a></li></ul></li><li><a href="#jiu-zheng-ze-biao-da-shi">九、正则表达式</a><ul><li><a href="#grep">grep</a></li><li><a href="#printf">printf</a></li><li><a href="#awk">awk</a></li></ul></li><li><a href="#shi-jin-cheng-guan-li">十、进程管理</a><ul><li><a href="#cha-kan-jin-cheng">查看进程</a><ul><li><a href="#1-ps">1. ps</a></li><li><a href="#2-pstree">2. pstree</a></li><li><a href="#3-top">3. top</a></li><li><a href="#4-netstat">4. netstat</a></li></ul></li><li><a href="#jin-cheng-zhuang-tai">进程状态</a></li><li><a href="#sigchld">SIGCHLD</a></li><li><a href="#wait">wait()</a></li><li><a href="#waitpid">waitpid()</a></li><li><a href="#gu-er-jin-cheng">孤儿进程</a></li><li><a href="#jiang-shi-jin-cheng">僵尸进程</a></li></ul></li><li><a href="#can-kao-zi-liao">参考资料</a></li></ul><!-- tocstop --><p></div></p><h1><span id="yi-chang-yong-cao-zuo-yi-ji-gai-nian">一、常用操作以及概念</span><a href="#yi-chang-yong-cao-zuo-yi-ji-gai-nian" class="header-anchor">#</a></h1><h2><span id="kuai-jie-jian">快捷键</span><a href="#kuai-jie-jian" class="header-anchor">#</a></h2><ul><li>Tab：命令和文件名补全；</li><li>Ctrl+C：中断正在运行的程序；</li><li>Ctrl+D：结束键盘输入（End Of File，EOF）</li></ul><h2><span id="qiu-zhu">求助</span><a href="#qiu-zhu" class="header-anchor">#</a></h2><h3><span id="1-help">1. –help</span><a href="#1-help" class="header-anchor">#</a></h3><p>指令的基本用法与选项介绍。</p><h3><span id="2-man">2. man</span><a href="#2-man" class="header-anchor">#</a></h3><p>man 是 manual 的缩写，将指令的具体信息显示出来。</p><p>当执行<code>man date</code>时，有 DATE(1) 出现，其中的数字代表指令的类型，常用的数字及其类型如下：</p><table><thead><tr><th style="text-align:center">代号</th><th>类型</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td>用户在 shell 环境中可以操作的指令或者可执行文件</td></tr><tr><td style="text-align:center">5</td><td>配置文件</td></tr><tr><td style="text-align:center">8</td><td>系统管理员可以使用的管理指令</td></tr></tbody></table><h3><span id="3-info">3. info</span><a href="#3-info" class="header-anchor">#</a></h3><p>info 与 man 类似，但是 info 将文档分成一个个页面，每个页面可以进行跳转。</p><h3><span id="4-doc">4. doc</span><a href="#4-doc" class="header-anchor">#</a></h3><p>/usr/share/doc 存放着软件的一整套说明文件。</p><h2><span id="guan-ji">关机</span><a href="#guan-ji" class="header-anchor">#</a></h2><h3><span id="1-who">1. who</span><a href="#1-who" class="header-anchor">#</a></h3><p>在关机前需要先使用 who 命令查看有没有其它用户在线。</p><h3><span id="2-sync">2. sync</span><a href="#2-sync" class="header-anchor">#</a></h3><p>为了加快对磁盘文件的读写速度，位于内存中的文件数据不会立即同步到磁盘上，因此关机之前需要先进行 sync 同步操作。</p><h3><span id="3-shutdown">3. shutdown</span><a href="#3-shutdown" class="header-anchor">#</a></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># shutdown [-krhc] 时间 [信息]</span><br><span class="line">-k ： 不会关机，只是发送警告信息，通知所有在线的用户</span><br><span class="line">-r ： 将系统的服务停掉后就重新启动</span><br><span class="line">-h ： 将系统的服务停掉后就立即关机</span><br><span class="line">-c ： 取消已经在进行的 shutdown 指令内容</span><br></pre></td></tr></table></figure><h2><span id="path">PATH</span><a href="#path" class="header-anchor">#</a></h2><p>可以在环境变量 PATH 中声明可执行文件的路径，路径之间用 : 分隔。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/dmtsai/.local/bin:/home/dmtsai/bin</span><br></pre></td></tr></table></figure><h2><span id="sudo">sudo</span><a href="#sudo" class="header-anchor">#</a></h2><p>sudo 允许一般用户使用 root 可执行的命令，不过只有在 /etc/sudoers 配置文件中添加的用户才能使用该指令。</p><h2><span id="bao-guan-li-gong-ju">包管理工具</span><a href="#bao-guan-li-gong-ju" class="header-anchor">#</a></h2><p>RPM 和 DPKG 为最常见的两类软件包管理工具：</p><ul><li>RPM 全称为 Redhat Package Manager，最早由 Red Hat 公司制定实施，随后被 GNU 开源操作系统接受并成为很多 Linux 系统 (RHEL) 的既定软件标准。</li><li>与 RPM 进行竞争的是基于 Debian 操作系统 (Ubuntu) 的 DEB 软件包管理工具 DPKG，全称为 Debian Package，功能方面与 RPM 相似。</li></ul><p>YUM 基于 RPM，具有依赖管理功能，并具有软件升级的功能。</p><h2><span id="fa-xing-ban">发行版</span><a href="#fa-xing-ban" class="header-anchor">#</a></h2><p>Linux 发行版是 Linux 内核及各种应用软件的集成版本。</p><table><thead><tr><th style="text-align:center">基于的包管理工具</th><th style="text-align:center">商业发行版</th><th style="text-align:center">社区发行版</th></tr></thead><tbody><tr><td style="text-align:center">RPM</td><td style="text-align:center">Red Hat</td><td style="text-align:center">Fedora / CentOS</td></tr><tr><td style="text-align:center">DPKG</td><td style="text-align:center">Ubuntu</td><td style="text-align:center">Debian</td></tr></tbody></table><h2><span id="vim-san-ge-mo-shi">VIM 三个模式</span><a href="#vim-san-ge-mo-shi" class="header-anchor">#</a></h2><ul><li>一般指令模式（Command mode）：VIM 的默认模式，可以用于移动游标查看内容；</li><li>编辑模式（Insert mode）：按下 “i” 等按键之后进入，可以对文本进行编辑；</li><li>指令列模式（Bottom-line mode）：按下 “:” 按键之后进入，用于保存退出等操作。</li></ul><p>在指令列模式下，有以下命令用于离开或者保存文件。</p><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">:w</td><td style="text-align:center">写入磁盘</td></tr><tr><td style="text-align:center">:w!</td><td style="text-align:center">当文件为只读时，强制写入磁盘。到底能不能写入，与用户对该文件的权限有关</td></tr><tr><td style="text-align:center">:q</td><td style="text-align:center">离开</td></tr><tr><td style="text-align:center">:q!</td><td style="text-align:center">强制离开不保存</td></tr><tr><td style="text-align:center">:wq</td><td style="text-align:center">写入磁盘后离开</td></tr><tr><td style="text-align:center">:wq!</td><td style="text-align:center">强制写入磁盘后离开</td></tr></tbody></table><h2><span id="gnu">GNU</span><a href="#gnu" class="header-anchor">#</a></h2><p>GNU 计划，译为革奴计划，它的目标是创建一套完全自由的操作系统，称为 GNU，其内容软件完全以 GPL 方式发布。其中 GPL 全称为 GNU 通用公共许可协议，包含了以下内容：</p><ul><li>以任何目的运行此程序的自由；</li><li>再复制的自由；</li><li>改进此程序，并公开发布改进的自由。</li></ul><h2><span id="kai-yuan-xie-yi">开源协议</span><a href="#kai-yuan-xie-yi" class="header-anchor">#</a></h2><ul><li><a href="https://choosealicense.com/" target="_blank" rel="noopener">Choose an open source license</a></li><li><a href="http://www.ruanyifeng.com/blog/2011/05/how_to_choose_free_software_licenses.html" target="_blank" rel="noopener">如何选择开源许可证？</a></li></ul><h1><span id="er-ci-pan">二、磁盘</span><a href="#er-ci-pan" class="header-anchor">#</a></h1><h2><span id="ci-pan-jie-kou">磁盘接口</span><a href="#ci-pan-jie-kou" class="header-anchor">#</a></h2><h3><span id="1-ide">1. IDE</span><a href="#1-ide" class="header-anchor">#</a></h3><p>IDE（ATA）全称 Advanced Technology Attachment，接口速度最大为 133MB/s，因为并口线的抗干扰性太差，且排线占用空间较大，不利电脑内部散热，已逐渐被 SATA 所取代。</p><h3><span id="2-sata">2. SATA</span><a href="#2-sata" class="header-anchor">#</a></h3><p>SATA 全称 Serial ATA，也就是使用串口的 ATA 接口，抗干扰性强，且对数据线的长度要求比 ATA 低很多，支持热插拔等功能。SATA-II 的接口速度为 300MiB/s，而新的 SATA-III 标准可达到 600MiB/s 的传输速度。SATA 的数据线也比 ATA 的细得多，有利于机箱内的空气流通，整理线材也比较方便。</p><h3><span id="3-scsi">3. SCSI</span><a href="#3-scsi" class="header-anchor">#</a></h3><p>SCSI 全称是 Small Computer System Interface（小型机系统接口），经历多代的发展，从早期的 SCSI-II 到目前的 Ultra320 SCSI 以及 Fiber-Channel（光纤通道），接口型式也多种多样。SCSI 硬盘广为工作站级个人电脑以及服务器所使用，因此会使用较为先进的技术，如碟片转速 15000rpm 的高转速，且传输时 CPU 占用率较低，但是单价也比相同容量的 ATA 及 SATA 硬盘更加昂贵。</p><h3><span id="4-sas">4. SAS</span><a href="#4-sas" class="header-anchor">#</a></h3><p>SAS（Serial Attached SCSI）是新一代的 SCSI 技术，和 SATA 硬盘相同，都是采取序列式技术以获得更高的传输速度，可达到 6Gb/s。此外也透过缩小连接线改善系统内部空间等。</p><h2><span id="ci-pan-de-wen-jian-ming">磁盘的文件名</span><a href="#ci-pan-de-wen-jian-ming" class="header-anchor">#</a></h2><p>Linux 中每个硬件都被当做一个文件，包括磁盘。磁盘以磁盘接口类型进行命名，常见磁盘的文件名如下：</p><ul><li>IDE 磁盘：/dev/hd[a-d]</li><li>SATA/SCSI/SAS 磁盘：/dev/sd[a-p]</li></ul><p>其中文件名后面的序号的确定与系统检测到磁盘的顺序有关，而与磁盘所插入的插槽位置无关。</p><h1><span id="san-fen-qu">三、分区</span><a href="#san-fen-qu" class="header-anchor">#</a></h1><h2><span id="fen-qu-biao">分区表</span><a href="#fen-qu-biao" class="header-anchor">#</a></h2><p>磁盘分区表主要有两种格式，一种是限制较多的 MBR 分区表，一种是较新且限制较少的 GPT 分区表。</p><h3><span id="1-mbr">1. MBR</span><a href="#1-mbr" class="header-anchor">#</a></h3><p>MBR 中，第一个扇区最重要，里面有主要开机记录（Master boot record, MBR）及分区表（partition table），其中主要开机记录占 446 bytes，分区表占 64 bytes。</p><p>分区表只有 64 bytes，最多只能存储 4 个分区，这 4 个分区为主分区（Primary）和扩展分区（Extended）。其中扩展分区只有一个，它使用其它扇区用记录额外的分区表，因此通过扩展分区可以分出更多分区，这些分区称为逻辑分区。</p><p>Linux 也把分区当成文件，分区文件的命名方式为：磁盘文件名 + 编号，例如 /dev/sda1。注意，逻辑分区的编号从 5 开始。</p><h3><span id="2-gpt">2. GPT</span><a href="#2-gpt" class="header-anchor">#</a></h3><p>不同的磁盘有不同的扇区大小，例如 512 bytes 和最新磁盘的 4 k。GPT 为了兼容所有磁盘，在定义扇区上使用逻辑区块地址（Logical Block Address, LBA），LBA 默认大小为 512 bytes。</p><p>GPT 第 1 个区块记录了主要开机记录（MBR），紧接着是 33 个区块记录分区信息，并把最后的 33 个区块用于对分区信息进行备份。这 33 个区块第一个为 GPT 表头纪录，这个部份纪录了分区表本身的位置与大小和备份分区的位置，同时放置了分区表的校验码 (CRC32)，操作系统可以根据这个校验码来判断 GPT 是否正确。若有错误，可以使用备份分区进行恢复。</p><p>GPT 没有扩展分区概念，都是主分区，每个 LAB 可以分 4 个分区，因此总共可以分 4 * 32 = 128 个分区。</p><p>MBR 不支持 2.2 TB 以上的硬盘，GPT 则最多支持到 2<sup>33</sup> TB = 8 ZB。</p><h2><span id="kai-ji-jian-ce-cheng-xu">开机检测程序</span><a href="#kai-ji-jian-ce-cheng-xu" class="header-anchor">#</a></h2><h3><span id="1-bios">1. BIOS</span><a href="#1-bios" class="header-anchor">#</a></h3><p>BIOS（Basic Input/Output System，基本输入输出系统），它是一个固件（嵌入在硬件中的软件），BIOS 程序存放在断电后内容不会丢失的只读内存中。</p><p>BIOS 是开机的时候计算机执行的第一个程序，这个程序知道可以开机的磁盘，并读取磁盘第一个扇区的主要开机记录（MBR），由主要开机记录（MBR）执行其中的开机管理程序，这个开机管理程序会加载操作系统的核心文件。</p><p>主要开机记录（MBR）中的开机管理程序提供以下功能：选单、载入核心文件以及转交其它开机管理程序。转交这个功能可以用来实现了多重引导，只需要将另一个操作系统的开机管理程序安装在其它分区的启动扇区上，在启动开机管理程序时，就可以通过选单选择启动当前的操作系统或者转交给其它开机管理程序从而启动另一个操作系统。</p><p>下图中，第一扇区的主要开机记录（MBR）中的开机管理程序提供了两个选单：M1、M2，M1 指向了 Windows 操作系统，而 M2 指向其它分区的启动扇区，里面包含了另外一个开机管理程序，提供了一个指向 Linux 的选单。</p><p>安装多重引导，最好先安装 Windows 再安装 Linux。因为安装 Windows 时会覆盖掉主要开机记录（MBR），而 Linux 可以选择将开机管理程序安装在主要开机记录（MBR）或者其它分区的启动扇区，并且可以设置开机管理程序的选单。</p><h3><span id="2-uefi">2. UEFI</span><a href="#2-uefi" class="header-anchor">#</a></h3><p>BIOS 不可以读取 GPT 分区表，而 UEFI 可以。</p><h1><span id="si-wen-jian-xi-tong">四、文件系统</span><a href="#si-wen-jian-xi-tong" class="header-anchor">#</a></h1><h2><span id="fen-qu-yu-wen-jian-xi-tong">分区与文件系统</span><a href="#fen-qu-yu-wen-jian-xi-tong" class="header-anchor">#</a></h2><p>对分区进行格式化是为了在分区上建立文件系统。一个分区通常只能格式化为一个文件系统，但是磁盘阵列等技术可以将一个分区格式化为多个文件系统。</p><h2><span id="zu-cheng">组成</span><a href="#zu-cheng" class="header-anchor">#</a></h2><p>最主要的几个组成部分如下：</p><ul><li>inode：一个文件占用一个 inode，记录文件的属性，同时记录此文件的内容所在的 block 编号；</li><li>block：记录文件的内容，文件太大时，会占用多个 block。</li></ul><p>除此之外还包括：</p><ul><li>superblock：记录文件系统的整体信息，包括 inode 和 block 的总量、使用量、剩余量，以及文件系统的格式与相关信息等；</li><li>block bitmap：记录 block 是否被使用的位域。</li></ul><h2><span id="wen-jian-du-qu">文件读取</span><a href="#wen-jian-du-qu" class="header-anchor">#</a></h2><p>对于 Ext2 文件系统，当要读取一个文件的内容时，先在 inode 中去查找文件内容所在的所有 block，然后把所有 block 的内容读出来。</p><p>而对于 FAT 文件系统，它没有 inode，每个 block 中存储着下一个 block 的编号。</p><h2><span id="ci-pan-sui-pian">磁盘碎片</span><a href="#ci-pan-sui-pian" class="header-anchor">#</a></h2><p>指一个文件内容所在的 block 过于分散。</p><h2><span id="block">block</span><a href="#block" class="header-anchor">#</a></h2><p>在 Ext2 文件系统中所支持的 block 大小有 1K，2K 及 4K 三种，不同的大小限制了单个文件和文件系统的最大大小。</p><table><thead><tr><th style="text-align:center">大小</th><th style="text-align:center">1KB</th><th style="text-align:center">2KB</th><th style="text-align:center">4KB</th></tr></thead><tbody><tr><td style="text-align:center">最大单一文件</td><td style="text-align:center">16GB</td><td style="text-align:center">256GB</td><td style="text-align:center">2TB</td></tr><tr><td style="text-align:center">最大文件系统</td><td style="text-align:center">2TB</td><td style="text-align:center">8TB</td><td style="text-align:center">16TB</td></tr></tbody></table><p>一个 block 只能被一个文件所使用，未使用的部分直接浪费了。因此如果需要存储大量的小文件，那么最好选用比较小的 block。</p><h2><span id="inode">inode</span><a href="#inode" class="header-anchor">#</a></h2><p>inode 具体包含以下信息：</p><ul><li>权限 (read/write/excute)；</li><li>拥有者与群组 (owner/group)；</li><li>容量；</li><li>建立或状态改变的时间 (ctime)；</li><li>最近一次的读取时间 (atime)；</li><li>最近修改的时间 (mtime)；</li><li>定义文件特性的旗标 (flag)，如 SetUID…；</li><li>该文件真正内容的指向 (pointer)。</li></ul><p>inode 具有以下特点：</p><ul><li>每个 inode 大小均固定为 128 bytes (新的 ext4 与 xfs 可设定到 256 bytes)；</li><li>每个文件都仅会占用一个 inode。</li></ul><p>inode 中记录了文件内容所在的 block 编号，但是每个 block 非常小，一个大文件随便都需要几十万的 block。而一个 inode 大小有限，无法直接引用这么多 block 编号。因此引入了间接、双间接、三间接引用。间接引用是指，让 inode 记录的引用 block 块记录引用信息。</p><h2><span id="mu-lu">目录</span><a href="#mu-lu" class="header-anchor">#</a></h2><p>建立一个目录时，会分配一个 inode 与至少一个 block。block 记录的内容是目录下所有文件的 inode 编号以及文件名。</p><p>可以看出文件的 inode 本身不记录文件名，文件名记录在目录中，因此新增文件、删除文件、更改文件名这些操作与目录的 w 权限有关。</p><h2><span id="ri-zhi">日志</span><a href="#ri-zhi" class="header-anchor">#</a></h2><p>如果突然断电，那么文件系统会发生错误，例如断电前只修改了 block bitmap，而还没有将数据真正写入 block 中。</p><p>ext3/ext4 文件系统引入了日志功能，可以利用日志来修复文件系统。</p><h2><span id="gua-zai">挂载</span><a href="#gua-zai" class="header-anchor">#</a></h2><p>挂载利用目录作为文件系统的进入点，也就是说，进入目录之后就可以读取文件系统的数据。</p><h2><span id="mu-lu-pei-zhi">目录配置</span><a href="#mu-lu-pei-zhi" class="header-anchor">#</a></h2><p>为了使不同 Linux 发行版本的目录结构保持一致性，Filesystem Hierarchy Standard (FHS) 规定了 Linux 的目录结构。最基础的三个目录如下：</p><ul><li>/ (root, 根目录)</li><li>/usr (unix software resource)：所有系统默认软件都会安装到这个目录；</li><li>/var (variable)：存放系统或程序运行过程中的数据文件。</li></ul><h1><span id="wu-wen-jian">五、文件</span><a href="#wu-wen-jian" class="header-anchor">#</a></h1><h2><span id="wen-jian-shu-xing">文件属性</span><a href="#wen-jian-shu-xing" class="header-anchor">#</a></h2><p>用户分为三种：文件拥有者、群组以及其它人，对不同的用户有不同的文件权限。</p><p>使用 ls 查看一个文件时，会显示一个文件的信息，例如 <code>drwxr-xr-x. 3 root root 17 May 6 00:14 .config</code>，对这个信息的解释如下：</p><ul><li>drwxr-xr-x：文件类型以及权限，第 1 位为文件类型字段，后 9 位为文件权限字段</li><li>3：链接数</li><li>root：文件拥有者</li><li>root：所属群组</li><li>17：文件大小</li><li>May 6 00:14：文件最后被修改的时间</li><li>.config：文件名</li></ul><p>常见的文件类型及其含义有：</p><ul><li>d：目录</li><li>-：文件</li><li>l：链接文件</li></ul><p>9 位的文件权限字段中，每 3 个为一组，共 3 组，每一组分别代表对文件拥有者、所属群组以及其它人的文件权限。一组权限中的 3 位分别为 r、w、x 权限，表示可读、可写、可执行。</p><p>文件时间有以下三种：</p><ul><li>modification time (mtime)：文件的内容更新就会更新；</li><li>status time (ctime)：文件的状态（权限、属性）更新就会更新；</li><li>access time (atime)：读取文件时就会更新。</li></ul><h2><span id="wen-jian-yu-mu-lu-de-ji-ben-cao-zuo">文件与目录的基本操作</span><a href="#wen-jian-yu-mu-lu-de-ji-ben-cao-zuo" class="header-anchor">#</a></h2><h3><span id="1-ls">1. ls</span><a href="#1-ls" class="header-anchor">#</a></h3><p>列出文件或者目录的信息，目录的信息就是其中包含的文件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># ls [-aAdfFhilnrRSt] file|dir</span><br><span class="line">-a ：列出全部的文件</span><br><span class="line">-d ：仅列出目录本身</span><br><span class="line">-l ：以长数据串行列出，包含文件的属性与权限等等数据</span><br></pre></td></tr></table></figure><h3><span id="2-cd">2. cd</span><a href="#2-cd" class="header-anchor">#</a></h3><p>更换当前目录。</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="string">[相对路径或绝对路径]</span></span><br></pre></td></tr></table></figure><h3><span id="3-mkdir">3. mkdir</span><a href="#3-mkdir" class="header-anchor">#</a></h3><p>创建目录。</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir [-mp] 目录名称</span></span><br><span class="line"><span class="literal">-m ：配置目录权限</span></span><br><span class="line"><span class="literal">-p ：递归创建目录</span></span><br></pre></td></tr></table></figure><h3><span id="4-rmdir">4. rmdir</span><a href="#4-rmdir" class="header-anchor">#</a></h3><p>删除目录，目录必须为空。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rmdir [-p] 目录名称</span><br><span class="line">-p ：递归删除目录</span><br></pre></td></tr></table></figure><h3><span id="5-touch">5. touch</span><a href="#5-touch" class="header-anchor">#</a></h3><p>更新文件时间或者建立新文件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># touch [-acdmt] filename</span><br><span class="line">-a ： 更新 atime</span><br><span class="line">-c ： 更新 ctime，若该文件不存在则不建立新文件</span><br><span class="line">-m ： 更新 mtime</span><br><span class="line">-d ： 后面可以接更新日期而不使用当前日期，也可以使用 --date="日期或时间"</span><br><span class="line">-t ： 后面可以接更新时间而不使用当前时间，格式为[YYYYMMDDhhmm]</span><br></pre></td></tr></table></figure><h3><span id="6-cp">6. cp</span><a href="#6-cp" class="header-anchor">#</a></h3><p>复制文件。</p><p>如果源文件有两个以上，则目的文件一定要是目录才行。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cp [-adfilprsu] source destination</span><br><span class="line">-a ：相当于 -dr --preserve=all 的意思，至于 dr 请参考下列说明</span><br><span class="line">-d ：若来源文件为链接文件，则复制链接文件属性而非文件本身</span><br><span class="line">-i ：若目标文件已经存在时，在覆盖前会先询问</span><br><span class="line">-p ：连同文件的属性一起复制过去</span><br><span class="line">-r ：递归持续复制</span><br><span class="line">-u ：destination 比 source 旧才更新 destination，或 destination 不存在的情况下才复制</span><br><span class="line">--preserve=all ：除了 -p 的权限相关参数外，还加入 SELinux 的属性, links, xattr 等也复制了</span><br></pre></td></tr></table></figure><h3><span id="7-rm">7. rm</span><a href="#7-rm" class="header-anchor">#</a></h3><p>删除文件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># rm [-fir] 文件或目录</span><br><span class="line">-r ：递归删除</span><br></pre></td></tr></table></figure><h3><span id="8-mv">8. mv</span><a href="#8-mv" class="header-anchor">#</a></h3><p>移动文件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mv [-fiu] source destination</span><br><span class="line"># mv [options] source1 source2 source3 .... directory</span><br><span class="line">-f ： force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖</span><br></pre></td></tr></table></figure><h2><span id="xiu-gai-quan-xian">修改权限</span><a href="#xiu-gai-quan-xian" class="header-anchor">#</a></h2><p>可以将一组权限用数字来表示，此时一组权限的 3 个位当做二进制数字的位，从左到右每个位的权值为 4、2、1，即每个权限对应的数字权值为 r : 4、w : 2、x : 1。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chmod [-R] xyz dirname/filename</span><br></pre></td></tr></table></figure><p>示例：将 .bashrc 文件的权限修改为 -rwxr-xr–。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chmod 754 .bashrc</span><br></pre></td></tr></table></figure><p>也可以使用符号来设定权限。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># chmod [ugoa]  [+-=] [rwx] dirname/filename</span><br><span class="line">- u：拥有者</span><br><span class="line">- g：所属群组</span><br><span class="line">- o：其他人</span><br><span class="line">- a：所有人</span><br><span class="line">- +：添加权限</span><br><span class="line">- -：移除权限</span><br><span class="line">- =：设定权限</span><br></pre></td></tr></table></figure><p>示例：为 .bashrc 文件的所有用户添加写权限。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chmod a+w .bashrc</span><br></pre></td></tr></table></figure><h2><span id="wen-jian-mo-ren-quan-xian">文件默认权限</span><a href="#wen-jian-mo-ren-quan-xian" class="header-anchor">#</a></h2><ul><li>文件默认权限：文件默认没有可执行权限，因此为 666，也就是 -rw-rw-rw- 。</li><li>目录默认权限：目录必须要能够进入，也就是必须拥有可执行权限，因此为 777 ，也就是 drwxrwxrwx。</li></ul><p>可以通过 umask 设置或者查看文件的默认权限，通常以掩码的形式来表示，例如 002 表示其它用户的权限去除了一个 2 的权限，也就是写权限，因此建立新文件时默认的权限为 -rw-rw-r–。</p><h2><span id="mu-lu-de-quan-xian">目录的权限</span><a href="#mu-lu-de-quan-xian" class="header-anchor">#</a></h2><p>文件名不是存储在一个文件的内容中，而是存储在一个文件所在的目录中。因此，拥有文件的 w 权限并不能对文件名进行修改。</p><p>目录存储文件列表，一个目录的权限也就是对其文件列表的权限。因此，目录的 r 权限表示可以读取文件列表；w 权限表示可以修改文件列表，具体来说，就是添加删除文件，对文件名进行修改；x 权限可以让该目录成为工作目录，x 权限是 r 和 w 权限的基础，如果不能使一个目录成为工作目录，也就没办法读取文件列表以及对文件列表进行修改了。</p><h2><span id="lian-jie">链接</span><a href="#lian-jie" class="header-anchor">#</a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ln [-sf] source_filename dist_filename</span><br><span class="line">-s ：默认是 hard link，加 -s 为 symbolic link</span><br><span class="line">-f ：如果目标文件存在时，先删除目标文件</span><br></pre></td></tr></table></figure><h3><span id="1-shi-ti-lian-jie">1. 实体链接</span><a href="#1-shi-ti-lian-jie" class="header-anchor">#</a></h3><p>在目录下创建一个条目，记录着文件名与 inode 编号，这个 inode 就是源文件的 inode。</p><p>删除任意一个条目，文件还是存在，只要引用数量不为 0。</p><p>有以下限制：不能跨越文件系统、不能对目录进行链接。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># ln /etc/crontab .</span><br><span class="line"># ll -i /etc/crontab crontab</span><br><span class="line">34474855 -rw-r--r--. 2 root root 451 Jun 10 2014 crontab</span><br><span class="line">34474855 -rw-r--r--. 2 root root 451 Jun 10 2014 /etc/crontab</span><br></pre></td></tr></table></figure><h3><span id="2-fu-hao-lian-jie">2. 符号链接</span><a href="#2-fu-hao-lian-jie" class="header-anchor">#</a></h3><p>符号链接文件保存着源文件所在的绝对路径，在读取时会定位到源文件上，可以理解为 Windows 的快捷方式。</p><p>当源文件被删除了，链接文件就打不开了。</p><p>可以为目录建立链接。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ll -i /etc/crontab /root/crontab2</span><br><span class="line">34474855 -rw-r--r--. 2 root root 451 Jun 10 2014 /etc/crontab</span><br><span class="line">53745909 lrwxrwxrwx. 1 root root 12 Jun 23 22:31 /root/crontab2 -&gt; /etc/crontab</span><br></pre></td></tr></table></figure><h2><span id="huo-qu-wen-jian-nei-rong">获取文件内容</span><a href="#huo-qu-wen-jian-nei-rong" class="header-anchor">#</a></h2><h3><span id="1-cat">1. cat</span><a href="#1-cat" class="header-anchor">#</a></h3><p>取得文件内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cat [-AbEnTv] filename</span><br><span class="line">-n ：打印出行号，连同空白行也会有行号，-b 不会</span><br></pre></td></tr></table></figure><h3><span id="2-tac">2. tac</span><a href="#2-tac" class="header-anchor">#</a></h3><p>是 cat 的反向操作，从最后一行开始打印。</p><h3><span id="3-more">3. more</span><a href="#3-more" class="header-anchor">#</a></h3><p>和 cat 不同的是它可以一页一页查看文件内容，比较适合大文件的查看。</p><h3><span id="4-less">4. less</span><a href="#4-less" class="header-anchor">#</a></h3><p>和 more 类似，但是多了一个向前翻页的功能。</p><h3><span id="5-head">5. head</span><a href="#5-head" class="header-anchor">#</a></h3><p>取得文件前几行。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># head [-n number] filename</span><br><span class="line">-n ：后面接数字，代表显示几行的意思</span><br></pre></td></tr></table></figure><h3><span id="6-tail">6. tail</span><a href="#6-tail" class="header-anchor">#</a></h3><p>是 head 的反向操作，只是取得是后几行。</p><h3><span id="7-od">7. od</span><a href="#7-od" class="header-anchor">#</a></h3><p>以字符或者十六进制的形式显示二进制文件。</p><h2><span id="zhi-ling-yu-wen-jian-sou-suo">指令与文件搜索</span><a href="#zhi-ling-yu-wen-jian-sou-suo" class="header-anchor">#</a></h2><h3><span id="1-which">1. which</span><a href="#1-which" class="header-anchor">#</a></h3><p>指令搜索。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># which [-a] command</span><br><span class="line">-a ：将所有指令列出，而不是只列第一个</span><br></pre></td></tr></table></figure><h3><span id="2-whereis">2. whereis</span><a href="#2-whereis" class="header-anchor">#</a></h3><p>文件搜索。速度比较快，因为它只搜索几个特定的目录。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># whereis [-bmsu] dirname/filename</span><br></pre></td></tr></table></figure><h3><span id="3-locate">3. locate</span><a href="#3-locate" class="header-anchor">#</a></h3><p>文件搜索。可以用关键字或者正则表达式进行搜索。</p><p>locate 使用 /var/lib/mlocate/ 这个数据库来进行搜索，它存储在内存中，并且每天更新一次，所以无法用 locate 搜索新建的文件。可以使用 updatedb 来立即更新数据库。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># locate [-ir] keyword</span><br><span class="line">-r：正则表达式</span><br></pre></td></tr></table></figure><h3><span id="4-find">4. find</span><a href="#4-find" class="header-anchor">#</a></h3><p>文件搜索。可以使用文件的属性和权限进行搜索。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># find [basedir] [option]</span><br><span class="line">example: find . -name "shadow*"</span><br></pre></td></tr></table></figure><p><strong>① 与时间有关的选项</strong> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-mtime  n ：列出在 n 天前的那一天修改过内容的文件</span><br><span class="line">-mtime +n ：列出在 n 天之前 (不含 n 天本身) 修改过内容的文件</span><br><span class="line">-mtime -n ：列出在 n 天之内 (含 n 天本身) 修改过内容的文件</span><br><span class="line">-newer file ： 列出比 file 更新的文件</span><br></pre></td></tr></table></figure><p><strong>② 与文件拥有者和所属群组有关的选项</strong> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-uid n</span><br><span class="line">-gid n</span><br><span class="line">-user name</span><br><span class="line">-group name</span><br><span class="line">-nouser ：搜索拥有者不存在 /etc/passwd 的文件</span><br><span class="line">-nogroup：搜索所属群组不存在于 /etc/group 的文件</span><br></pre></td></tr></table></figure><p><strong>③ 与文件权限和名称有关的选项</strong> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-name filename</span><br><span class="line">-size [+-]SIZE：搜寻比 SIZE 还要大 (+) 或小 (-) 的文件。这个 SIZE 的规格有：c: 代表 byte，k: 代表 1024bytes。所以，要找比 50KB 还要大的文件，就是 -size +50k</span><br><span class="line">-type TYPE</span><br><span class="line">-perm mode  ：搜索权限等于 mode 的文件</span><br><span class="line">-perm -mode ：搜索权限包含 mode 的文件</span><br><span class="line">-perm /mode ：搜索权限包含任一 mode 的文件</span><br></pre></td></tr></table></figure><h1><span id="liu-ya-suo-yu-da-bao">六、压缩与打包</span><a href="#liu-ya-suo-yu-da-bao" class="header-anchor">#</a></h1><h2><span id="ya-suo-wen-jian-ming">压缩文件名</span><a href="#ya-suo-wen-jian-ming" class="header-anchor">#</a></h2><p>Linux 底下有很多压缩文件名，常见的如下：</p><table><thead><tr><th>扩展名</th><th>压缩程序</th></tr></thead><tbody><tr><td>*.Z</td><td>compress</td></tr><tr><td>*.zip</td><td>zip</td></tr><tr><td>*.gz</td><td>gzip</td></tr><tr><td>*.bz2</td><td>bzip2</td></tr><tr><td>*.xz</td><td>xz</td></tr><tr><td>*.tar</td><td>tar 程序打包的数据，没有经过压缩</td></tr><tr><td>*.tar.gz</td><td>tar 程序打包的文件，经过 gzip 的压缩</td></tr><tr><td>*.tar.bz2</td><td>tar 程序打包的文件，经过 bzip2 的压缩</td></tr><tr><td>*.tar.xz</td><td>tar 程序打包的文件，经过 xz 的压缩</td></tr></tbody></table><h2><span id="ya-suo-zhi-ling">压缩指令</span><a href="#ya-suo-zhi-ling" class="header-anchor">#</a></h2><h3><span id="1-gzip">1. gzip</span><a href="#1-gzip" class="header-anchor">#</a></h3><p>gzip 是 Linux 使用最广的压缩指令，可以解开 compress、zip 与 gzip 所压缩的文件。</p><p>经过 gzip 压缩过，源文件就不存在了。</p><p>有 9 个不同的压缩等级可以使用。</p><p>可以使用 zcat、zmore、zless 来读取压缩文件的内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ gzip [-cdtv#] filename</span><br><span class="line">-c ：将压缩的数据输出到屏幕上</span><br><span class="line">-d ：解压缩</span><br><span class="line">-t ：检验压缩文件是否出错</span><br><span class="line">-v ：显示压缩比等信息</span><br><span class="line">-# ： # 为数字的意思，代表压缩等级，数字越大压缩比越高，默认为 6</span><br></pre></td></tr></table></figure><h3><span id="2-bzip2">2. bzip2</span><a href="#2-bzip2" class="header-anchor">#</a></h3><p>提供比 gzip 更高的压缩比。</p><p>查看命令：bzcat、bzmore、bzless、bzgrep。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ bzip2 [-cdkzv#] filename</span><br><span class="line">-k ：保留源文件</span><br></pre></td></tr></table></figure><h3><span id="3-xz">3. xz</span><a href="#3-xz" class="header-anchor">#</a></h3><p>提供比 bzip2 更佳的压缩比。</p><p>可以看到，gzip、bzip2、xz 的压缩比不断优化。不过要注意的是，压缩比越高，压缩的时间也越长。</p><p>查看命令：xzcat、xzmore、xzless、xzgrep。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xz [-dtlkc#] filename</span><br></pre></td></tr></table></figure><h2><span id="da-bao">打包</span><a href="#da-bao" class="header-anchor">#</a></h2><p>压缩指令只能对一个文件进行压缩，而打包能够将多个文件打包成一个大文件。tar 不仅可以用于打包，也可以使用 gip、bzip2、xz 将打包文件进行压缩。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ tar [-z|-j|-J] [cv] [-f 新建的 tar 文件] filename...  ==打包压缩</span><br><span class="line">$ tar [-z|-j|-J] [tv] [-f 已有的 tar 文件]              ==查看</span><br><span class="line">$ tar [-z|-j|-J] [xv] [-f 已有的 tar 文件] [-C 目录]    ==解压缩</span><br><span class="line">-z ：使用 zip；</span><br><span class="line">-j ：使用 bzip2；</span><br><span class="line">-J ：使用 xz；</span><br><span class="line">-c ：新建打包文件；</span><br><span class="line">-t ：查看打包文件里面有哪些文件；</span><br><span class="line">-x ：解打包或解压缩的功能；</span><br><span class="line">-v ：在压缩/解压缩的过程中，显示正在处理的文件名；</span><br><span class="line">-f : filename：要处理的文件；</span><br><span class="line">-C 目录 ： 在特定目录解压缩。</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">使用方式</th><th>命令</th></tr></thead><tbody><tr><td style="text-align:center">打包压缩</td><td>tar -jcv -f filename.tar.bz2 要被压缩的文件或目录名称</td></tr><tr><td style="text-align:center">查 看</td><td>tar -jtv -f filename.tar.bz2</td></tr><tr><td style="text-align:center">解压缩</td><td>tar -jxv -f filename.tar.bz2 -C 要解压缩的目录</td></tr></tbody></table><h1><span id="qi-bash">七、Bash</span><a href="#qi-bash" class="header-anchor">#</a></h1><p>可以通过 Shell 请求内核提供服务，Bash 正是 Shell 的一种。</p><h2><span id="te-xing">特性</span><a href="#te-xing" class="header-anchor">#</a></h2><ul><li>命令历史：记录使用过的命令</li><li>命令与文件补全：快捷键：tab</li><li>命名别名：例如 lm 是 ls -al 的别名</li><li>shell scripts</li><li>通配符：例如 ls -l /usr/bin/X* 列出 /usr/bin 下面所有以 X 开头的文件</li></ul><h2><span id="bian-liang-cao-zuo">变量操作</span><a href="#bian-liang-cao-zuo" class="header-anchor">#</a></h2><p>对一个变量赋值直接使用 =。</p><p>对变量取用需要在变量前加上 \$ ，也可以用 \${} 的形式；</p><p>输出变量使用 echo 命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ x=abc</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$x</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;x&#125;</span></span><br></pre></td></tr></table></figure><p>变量内容如果有空格，必须使用双引号或者单引号。</p><ul><li>双引号内的特殊字符可以保留原本特性，例如 x=”lang is \$LANG”，则 x 的值为 lang is zh_TW.UTF-8；</li><li>单引号内的特殊字符就是特殊字符本身，例如 x=’lang is \$LANG’，则 x 的值为 lang is \$LANG。</li></ul><p>可以使用 `指令` 或者 \$(指令) 的方式将指令的执行结果赋值给变量。例如 version=\$(uname -r)，则 version 的值为 4.15.0-22-generic。</p><p>可以使用 export 命令将自定义变量转成环境变量，环境变量可以在子程序中使用，所谓子程序就是由当前 Bash 而产生的子 Bash。</p><p>Bash 的变量可以声明为数组和整数数字。注意数字类型没有浮点数。如果不进行声明，默认是字符串类型。变量的声明使用 declare 命令：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ declare [-aixr] variable</span><br><span class="line">-a ： 定义为数组类型</span><br><span class="line">-i ： 定义为整数类型</span><br><span class="line">-x ： 定义为环境变量</span><br><span class="line">-r ： 定义为 readonly 类型</span><br></pre></td></tr></table></figure><p>使用 [ ] 来对数组进行索引操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ array[1]=a</span><br><span class="line">$ array[2]=b</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;array[1]&#125;</span></span><br></pre></td></tr></table></figure><h2><span id="zhi-ling-sou-suo-shun-xu">指令搜索顺序</span><a href="#zhi-ling-sou-suo-shun-xu" class="header-anchor">#</a></h2><ul><li>以绝对或相对路径来执行指令，例如 /bin/ls 或者 ./ls ；</li><li>由别名找到该指令来执行；</li><li>由 Bash 内置的指令来执行；</li><li>按 \$PATH 变量指定的搜索路径的顺序找到第一个指令来执行。</li></ul><h2><span id="shu-ju-liu-chong-ding-xiang">数据流重定向</span><a href="#shu-ju-liu-chong-ding-xiang" class="header-anchor">#</a></h2><p>重定向指的是使用文件代替标准输入、标准输出和标准错误输出。</p><table><thead><tr><th style="text-align:center">1</th><th style="text-align:center">代码</th><th style="text-align:center">运算符</th></tr></thead><tbody><tr><td style="text-align:center">标准输入 (stdin)</td><td style="text-align:center">0</td><td style="text-align:center">&lt; 或 &lt;&lt;</td></tr><tr><td style="text-align:center">标准输出 (stdout)</td><td style="text-align:center">1</td><td style="text-align:center">&gt; 或 &gt;&gt;</td></tr><tr><td style="text-align:center">标准错误输出 (stderr)</td><td style="text-align:center">2</td><td style="text-align:center">2&gt; 或 2&gt;&gt;</td></tr></tbody></table><p>其中，有一个箭头的表示以覆盖的方式重定向，而有两个箭头的表示以追加的方式重定向。</p><p>可以将不需要的标准输出以及标准错误输出重定向到 /dev/null，相当于扔进垃圾箱。</p><p>如果需要将标准输出以及标准错误输出同时重定向到一个文件，需要将某个输出转换为另一个输出，例如 2&gt;&amp;1 表示将标准错误输出转换为标准输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ find /home -name .bashrc &gt; list 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h1><span id="ba-guan-dao-zhi-ling">八、管道指令</span><a href="#ba-guan-dao-zhi-ling" class="header-anchor">#</a></h1><p>管道是将一个命令的标准输出作为另一个命令的标准输入，在数据需要经过多个步骤的处理之后才能得到我们想要的内容时就可以使用管道。</p><p>在命令之间使用 | 分隔各个管道命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -al /etc | less</span><br></pre></td></tr></table></figure><h2><span id="ti-qu-zhi-ling">提取指令</span><a href="#ti-qu-zhi-ling" class="header-anchor">#</a></h2><p>cut 对数据进行切分，取出想要的部分。</p><p>切分过程一行一行地进行。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cut</span><br><span class="line">-d ：分隔符</span><br><span class="line">-f ：经过 -d 分隔后，使用 -f n 取出第 n 个区间</span><br><span class="line">-c ：以字符为单位取出区间</span><br></pre></td></tr></table></figure><p>示例 1：last 显示登入者的信息，取出用户名。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ last</span><br><span class="line">root pts/1 192.168.201.101 Sat Feb 7 12:35 still logged in</span><br><span class="line">root pts/1 192.168.201.101 Fri Feb 6 12:13 - 18:46 (06:33)</span><br><span class="line">root pts/1 192.168.201.254 Thu Feb 5 22:37 - 23:53 (01:16)</span><br><span class="line"></span><br><span class="line">$ last | cut -d ' ' -f 1</span><br></pre></td></tr></table></figure><p>示例 2：将 export 输出的信息，取出第 12 字符以后的所有字符串。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ export</span><br><span class="line">declare -x HISTCONTROL="ignoredups"</span><br><span class="line">declare -x HISTSIZE="1000"</span><br><span class="line">declare -x HOME="/home/dmtsai"</span><br><span class="line">declare -x HOSTNAME="study.centos.vbird"</span><br><span class="line">.....(其他省略).....</span><br><span class="line"></span><br><span class="line">$ export | cut -c 12-</span><br></pre></td></tr></table></figure><h2><span id="pai-xu-zhi-ling">排序指令</span><a href="#pai-xu-zhi-ling" class="header-anchor">#</a></h2><p><strong>sort</strong>  用于排序。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sort [-fbMnrtuk] [file or stdin]</span><br><span class="line">-f ：忽略大小写</span><br><span class="line">-b ：忽略最前面的空格</span><br><span class="line">-M ：以月份的名字来排序，例如 JAN，DEC</span><br><span class="line">-n ：使用数字</span><br><span class="line">-r ：反向排序</span><br><span class="line">-u ：相当于 unique，重复的内容只出现一次</span><br><span class="line">-t ：分隔符，默认为 tab</span><br><span class="line">-k ：指定排序的区间</span><br></pre></td></tr></table></figure><p>示例：/etc/passwd 文件内容以 : 来分隔，要求以第三列进行排序。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/passwd | sort -t ':' -k 3</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">dmtsai:x:1000:1000:dmtsai:/home/dmtsai:/bin/bash</span><br><span class="line">alex:x:1001:1002::/home/alex:/bin/bash</span><br><span class="line">arod:x:1002:1003::/home/arod:/bin/bash</span><br></pre></td></tr></table></figure><p><strong>uniq</strong>  可以将重复的数据只取一个。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ uniq [-ic]</span><br><span class="line">-i ：忽略大小写</span><br><span class="line">-c ：进行计数</span><br></pre></td></tr></table></figure><p>示例：取得每个人的登录总次数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ last | cut -d ' ' -f 1 | sort | uniq -c</span><br><span class="line">1</span><br><span class="line">6 (unknown</span><br><span class="line">47 dmtsai</span><br><span class="line">4 reboot</span><br><span class="line">7 root</span><br><span class="line">1 wtmp</span><br></pre></td></tr></table></figure><h2><span id="shuang-xiang-shu-chu-chong-ding-xiang">双向输出重定向</span><a href="#shuang-xiang-shu-chu-chong-ding-xiang" class="header-anchor">#</a></h2><p>输出重定向会将输出内容重定向到文件中，而  <strong>tee</strong>  不仅能够完成这个功能，还能保留屏幕上的输出。也就是说，使用 tee 指令，一个输出会同时传送到文件和屏幕上。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tee [-a] file</span><br></pre></td></tr></table></figure><h2><span id="zi-fu-zhuan-huan-zhi-ling">字符转换指令</span><a href="#zi-fu-zhuan-huan-zhi-ling" class="header-anchor">#</a></h2><p><strong>tr</strong>  用来删除一行中的字符，或者对字符进行替换。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tr [-ds] SET1 ...</span><br><span class="line">-d ： 删除行中 SET1 这个字符串</span><br></pre></td></tr></table></figure><p>示例，将 last 输出的信息所有小写转换为大写。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ last | tr '[a-z]' '[A-Z]'</span><br></pre></td></tr></table></figure><p>  <strong>col</strong>  将 tab 字符转为空格字符。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ col [-xb]</span><br><span class="line">-x ： 将 tab 键转换成对等的空格键</span><br></pre></td></tr></table></figure><p><strong>expand</strong>  将 tab 转换一定数量的空格，默认是 8 个。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ expand [-t] file</span><br><span class="line">-t ：tab 转为空格的数量</span><br></pre></td></tr></table></figure><p><strong>join</strong>  将有相同数据的那一行合并在一起。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ join [-ti12] file1 file2</span><br><span class="line">-t ：分隔符，默认为空格</span><br><span class="line">-i ：忽略大小写的差异</span><br><span class="line">-1 ：第一个文件所用的比较字段</span><br><span class="line">-2 ：第二个文件所用的比较字段</span><br></pre></td></tr></table></figure><p><strong>paste</strong>  直接将两行粘贴在一起。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ paste [-d] file1 file2</span><br><span class="line">-d ：分隔符，默认为 tab</span><br></pre></td></tr></table></figure><h2><span id="fen-qu-zhi-ling">分区指令</span><a href="#fen-qu-zhi-ling" class="header-anchor">#</a></h2><p><strong>split</strong>  将一个文件划分成多个文件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ split [-bl] file PREFIX</span><br><span class="line">-b ：以大小来进行分区，可加单位，例如 b, k, m 等</span><br><span class="line">-l ：以行数来进行分区。</span><br><span class="line">- PREFIX ：分区文件的前导名称</span><br></pre></td></tr></table></figure><h1><span id="jiu-zheng-ze-biao-da-shi">九、正则表达式</span><a href="#jiu-zheng-ze-biao-da-shi" class="header-anchor">#</a></h1><h2><span id="grep">grep</span><a href="#grep" class="header-anchor">#</a></h2><p>g/re/p（globally search a regular expression and print)，使用正则表示式进行全局查找并打印。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ grep [-acinv] [--color=auto] 搜寻字符串 filename</span><br><span class="line">-c ： 统计个数</span><br><span class="line">-i ： 忽略大小写</span><br><span class="line">-n ： 输出行号</span><br><span class="line">-v ： 反向选择，也就是显示出没有 搜寻字符串 内容的那一行</span><br><span class="line">--color=auto ：找到的关键字加颜色显示</span><br></pre></td></tr></table></figure><p>示例：把含有 the 字符串的行提取出来（注意默认会有 –color=auto 选项，因此以下内容在 Linux 中有颜色显示 the 字符串）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ grep -n 'the' regular_express.txt</span><br><span class="line">8:I can't finish the test.</span><br><span class="line">12:the symbol '*' is represented as start.</span><br><span class="line">15:You are the best is mean you are the no. 1.</span><br><span class="line">16:The world Happy is the same with "glad".</span><br><span class="line">18:google is the best tools for search keyword</span><br></pre></td></tr></table></figure><p>因为 { 和 } 在 shell 是有特殊意义的，因此必须要使用转义字符进行转义。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep -n 'go\&#123;2,5\&#125;g' regular_express.txt</span><br></pre></td></tr></table></figure><h2><span id="printf">printf</span><a href="#printf" class="header-anchor">#</a></h2><p>用于格式化输出。它不属于管道命令，在给 printf 传数据时需要使用 $( ) 形式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ printf '%10s %5i %5i %5i %8.2f \n' $(cat printf.txt)</span><br><span class="line">    DmTsai    80    60    92    77.33</span><br><span class="line">     VBird    75    55    80    70.00</span><br><span class="line">       Ken    60    90    70    73.33</span><br></pre></td></tr></table></figure><h2><span id="awk">awk</span><a href="#awk" class="header-anchor">#</a></h2><p>是由 Alfred Aho，Peter Weinberger, 和 Brian Kernighan 创造，awk 这个名字就是这三个创始人名字的首字母。</p><p>awk 每次处理一行，处理的最小单位是字段，每个字段的命名方式为：\$n，n 为字段号，从 1 开始，\$0 表示一整行。</p><p>示例：取出最近五个登录用户的用户名和 IP</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ last -n 5</span><br><span class="line">dmtsai pts/0 192.168.1.100 Tue Jul 14 17:32 still logged in</span><br><span class="line">dmtsai pts/0 192.168.1.100 Thu Jul 9 23:36 - 02:58 (03:22)</span><br><span class="line">dmtsai pts/0 192.168.1.100 Thu Jul 9 17:23 - 23:36 (06:12)</span><br><span class="line">dmtsai pts/0 192.168.1.100 Thu Jul 9 08:02 - 08:17 (00:14)</span><br><span class="line">dmtsai tty1 Fri May 29 11:55 - 12:11 (00:15)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ last -n 5 | awk '&#123;print $1 "\t" $3&#125;'</span><br></pre></td></tr></table></figure><p>可以根据字段的某些条件进行匹配，例如匹配字段小于某个值的那一行数据。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk '条件类型 1 &#123;动作 1&#125; 条件类型 2 &#123;动作 2&#125; ...' filename</span><br></pre></td></tr></table></figure><p>示例：/etc/passwd 文件第三个字段为 UID，对 UID 小于 10 的数据进行处理。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/passwd | awk &apos;BEGIN &#123;FS=&quot;:&quot;&#125; $3 &lt; 10 &#123;print $1 &quot;\t &quot; $3&#125;&apos;</span><br><span class="line">root 0</span><br><span class="line">bin 1</span><br><span class="line">daemon 2</span><br></pre></td></tr></table></figure><p>awk 变量：</p><table><thead><tr><th style="text-align:center">变量名称</th><th>代表意义</th></tr></thead><tbody><tr><td style="text-align:center">NF</td><td>每一行拥有的字段总数</td></tr><tr><td style="text-align:center">NR</td><td>目前所处理的是第几行数据</td></tr><tr><td style="text-align:center">FS</td><td>目前的分隔字符，默认是空格键</td></tr></tbody></table><p>示例：显示正在处理的行号以及每一行有多少字段</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ last -n 5 | awk '&#123;print $1 "\t lines: " NR "\t columns: " NF&#125;'</span><br><span class="line">dmtsai lines: 1 columns: 10</span><br><span class="line">dmtsai lines: 2 columns: 10</span><br><span class="line">dmtsai lines: 3 columns: 10</span><br><span class="line">dmtsai lines: 4 columns: 10</span><br><span class="line">dmtsai lines: 5 columns: 9</span><br></pre></td></tr></table></figure><h1><span id="shi-jin-cheng-guan-li">十、进程管理</span><a href="#shi-jin-cheng-guan-li" class="header-anchor">#</a></h1><h2><span id="cha-kan-jin-cheng">查看进程</span><a href="#cha-kan-jin-cheng" class="header-anchor">#</a></h2><h3><span id="1-ps">1. ps</span><a href="#1-ps" class="header-anchor">#</a></h3><p>查看某个时间点的进程信息</p><p>示例一：查看自己的进程</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps -l</span></span><br></pre></td></tr></table></figure><p>示例二：查看系统所有进程</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps aux</span></span><br></pre></td></tr></table></figure><p>示例三：查看特定的进程</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ps aux | grep threadx</span></span><br></pre></td></tr></table></figure><h3><span id="2-pstree">2. pstree</span><a href="#2-pstree" class="header-anchor">#</a></h3><p>查看进程树</p><p>示例：查看所有进程树</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pstree -A</span></span><br></pre></td></tr></table></figure><h3><span id="3-top">3. top</span><a href="#3-top" class="header-anchor">#</a></h3><p>实时显示进程信息</p><p>示例：两秒钟刷新一次</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># top -d 2</span></span><br></pre></td></tr></table></figure><h3><span id="4-netstat">4. netstat</span><a href="#4-netstat" class="header-anchor">#</a></h3><p>查看占用端口的进程</p><p>示例：查看特定端口的进程</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># netstat -anp | grep port</span></span><br></pre></td></tr></table></figure><h2><span id="jin-cheng-zhuang-tai">进程状态</span><a href="#jin-cheng-zhuang-tai" class="header-anchor">#</a></h2><table><thead><tr><th style="text-align:center">状态</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center">R</td><td>running or runnable (on run queue)</td></tr><tr><td style="text-align:center">D</td><td>uninterruptible sleep (usually I/O)</td></tr><tr><td style="text-align:center">S</td><td>interruptible sleep (waiting for an event to complete)</td></tr><tr><td style="text-align:center">Z</td><td>zombie (terminated but not reaped by its parent)</td></tr><tr><td style="text-align:center">T</td><td>stopped (either by a job control signal or because it is being traced)</td></tr></tbody></table><h2><span id="sigchld">SIGCHLD</span><a href="#sigchld" class="header-anchor">#</a></h2><p>当一个子进程改变了它的状态时（停止运行，继续运行或者退出），有两件事会发生在父进程中：</p><ul><li>得到 SIGCHLD 信号；</li><li>waitpid() 或者 wait() 调用会返回。</li></ul><p>其中子进程发送的 SIGCHLD 信号包含了子进程的信息，比如进程 ID、进程状态、进程使用 CPU 的时间等。</p><p>在子进程退出时，它的进程描述符不会立即释放，这是为了让父进程得到子进程信息，父进程通过 wait() 和 waitpid() 来获得一个已经退出的子进程的信息。</p><h2><span id="wait">wait()</span><a href="#wait" class="header-anchor">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">pid_t</span> wait(<span class="keyword">int</span> *status)</span><br></pre></td></tr></table></figure><p>父进程调用 wait() 会一直阻塞，直到收到一个子进程退出的 SIGCHLD 信号，之后 wait() 函数会销毁子进程并返回。</p><p>如果成功，返回被收集的子进程的进程 ID；如果调用进程没有子进程，调用就会失败，此时返回 -1，同时 errno 被置为 ECHILD。</p><p>参数 status 用来保存被收集的子进程退出时的一些状态，如果对这个子进程是如何死掉的毫不在意，只想把这个子进程消灭掉，可以设置这个参数为 NULL。</p><h2><span id="waitpid">waitpid()</span><a href="#waitpid" class="header-anchor">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">pid_t</span> waitpid(<span class="keyword">pid_t</span> pid, <span class="keyword">int</span> *status, <span class="keyword">int</span> options)</span><br></pre></td></tr></table></figure><p>作用和 wait() 完全相同，但是多了两个可由用户控制的参数 pid 和 options。</p><p>pid 参数指示一个子进程的 ID，表示只关心这个子进程退出的 SIGCHLD 信号。如果 pid=-1 时，那么和 wait() 作用相同，都是关心所有子进程退出的 SIGCHLD 信号。</p><p>options 参数主要有 WNOHANG 和 WUNTRACED 两个选项，WNOHANG 可以使 waitpid() 调用变成非阻塞的，也就是说它会立即返回，父进程可以继续执行其它任务。</p><h2><span id="gu-er-jin-cheng">孤儿进程</span><a href="#gu-er-jin-cheng" class="header-anchor">#</a></h2><p>一个父进程退出，而它的一个或多个子进程还在运行，那么这些子进程将成为孤儿进程。</p><p>孤儿进程将被 init 进程（进程号为 1）所收养，并由 init 进程对它们完成状态收集工作。</p><p>由于孤儿进程会被 init 进程收养，所以孤儿进程不会对系统造成危害。</p><h2><span id="jiang-shi-jin-cheng">僵尸进程</span><a href="#jiang-shi-jin-cheng" class="header-anchor">#</a></h2><p>一个子进程的进程描述符在子进程退出时不会释放，只有当父进程通过 wait() 或 waitpid() 获取了子进程信息后才会释放。如果子进程退出，而父进程并没有调用 wait() 或 waitpid()，那么子进程的进程描述符仍然保存在系统中，这种进程称之为僵尸进程。</p><p>僵尸进程通过 ps 命令显示出来的状态为 Z（zombie）。</p><p>系统所能使用的进程号是有限的，如果产生大量僵尸进程，将因为没有可用的进程号而导致系统不能产生新的进程。</p><p>要消灭系统中大量的僵尸进程，只需要将其父进程杀死，此时僵尸进程就会变成孤儿进程，从而被 init 所收养，这样 init 就会释放所有的僵尸进程所占有的资源，从而结束僵尸进程。</p><h1><span id="can-kao-zi-liao">参考资料</span><a href="#can-kao-zi-liao" class="header-anchor">#</a></h1><ul><li><a href="http://man.linuxde.net/" target="_blank" rel="noopener">Linux 命令手册</a></li><li><a href="http://naotu.baidu.com/file/9a7385a167c87b5f8c91627512d2179d?token=e87a97ff7806abe7" target="_blank" rel="noopener">Linux 百度脑图</a></li></ul>]]></content>
    
    <summary type="html">
    
      快捷键、帮助、关机、磁盘管理、分区、文件、打包压缩、管道、awk、进程等命令。
    
    </summary>
    
      <category term="计算机基础" scheme="https://deardjh.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Linux" scheme="https://deardjh.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitPages 配置小结</title>
    <link href="https://deardjh.github.io/2019/03/28/environment_hexo_gitpages/"/>
    <id>https://deardjh.github.io/2019/03/28/environment_hexo_gitpages/</id>
    <published>2019-03-28T03:00:54.000Z</published>
    <updated>2019-03-30T02:12:36.530Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#yuan-qi">缘起</a></li><li><a href="#zhai-yao">摘要</a></li><li><a href="#hexo-bu-fen">Hexo 部分</a><ul><li><a href="#ben-di-huan-jing">本地环境</a></li><li><a href="#ji-ben-cao-zuo">基本操作</a></li></ul></li><li><a href="#gitpages-jian-jie">GitPages 简介</a><ul><li><a href="#chuang-jian-zhang-hu">创建账户</a></li><li><a href="#chuang-jian-cang-ku">创建仓库</a></li><li><a href="#tian-jia-ssh-key">添加SSH Key</a></li><li><a href="#ben-di-hexo-bu-shu-dao-github">本地Hexo部署到Github</a></li></ul></li><li><a href="#ge-xing-hua-pei-zhi">个性化配置</a><ul><li><a href="#zhan-dian-pei-zhi-wen-jian-config-yml">站点配置文件_config.yml</a></li><li><a href="#zhu-ti-pei-zhi-wen-jian-config-yml">主题配置文件_config.yml</a></li><li><a href="#zhi-chi-markdown-mu-lu">支持markdown目录</a></li><li><a href="#tian-jia-jin-du-tiao">添加进度条</a></li><li><a href="#tian-jia-rss">添加RSS</a></li><li><a href="#tong-ji-zi-fu-yue-du-shi-jian">统计字符+阅读时间</a></li><li><a href="#pdf">PDF</a></li><li><a href="#zi-ding-yi-wen-zhang-pai-xu">自定义文章排序</a></li><li><a href="#wen-zhang-mo-wei-tong-yi-tian-jia-ben-wen-jie-shu-biao-ji">文章末尾统一添加“本文结束”标记</a></li></ul></li><li><a href="#xiang-guan-lian-jie">相关链接</a></li></ul><!-- tocstop --><p></div></p><h2><span id="yuan-qi">缘起</span><a href="#yuan-qi" class="header-anchor">#</a></h2><p>网上的教程非常多，但遇到问题总是要找很久才能解决，于是想要自己总结一下。</p><h2><span id="zhai-yao">摘要</span><a href="#zhai-yao" class="header-anchor">#</a></h2><p>本文从Hexo和Github两部分总结关于GitPages部署个人博客以及相关的配置，一是为了自己防止重新搭建时忘记在网上浪费太多时间；二是为了帮助更多新手少走弯路，节约时间，最后将常用的基本配置总结了一下，总结的配置并不全面，但是基本需求满足了。</p><h2><span id="hexo-bu-fen">Hexo 部分</span><a href="#hexo-bu-fen" class="header-anchor">#</a></h2><ul><li><a href="https://hexo.io/zh-cn" target="_blank" rel="noopener">hexo 官网</a></li><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo 文档</a></li></ul><h3><span id="ben-di-huan-jing">本地环境</span><a href="#ben-di-huan-jing" class="header-anchor">#</a></h3><blockquote><ul><li>git</li><li>node</li><li>hexo（sudo npm install -g hexo）</li></ul></blockquote><h3><span id="ji-ben-cao-zuo">基本操作</span><a href="#ji-ben-cao-zuo" class="header-anchor">#</a></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mkdir blog</span><br><span class="line">cd blog</span><br><span class="line">hexo help</span><br><span class="line">hexo version</span><br><span class="line">hexo init </span><br><span class="line">hexo new 'Hello' 新建文章</span><br><span class="line">hexo new page 'pageName'新建页面</span><br><span class="line">hexo generate|g</span><br><span class="line">hexo server|s</span><br><span class="line">浏览器访问:http://localhost:4000</span><br></pre></td></tr></table></figure><h2><span id="gitpages-jian-jie">GitPages 简介</span><a href="#gitpages-jian-jie" class="header-anchor">#</a></h2><ul><li><a href="https://pages.github.com/" target="_blank" rel="noopener">github pages</a></li></ul><h3><span id="chuang-jian-zhang-hu">创建账户</span><a href="#chuang-jian-zhang-hu" class="header-anchor">#</a></h3><blockquote><p>官网：<a href="https://github.com" target="_blank" rel="noopener">github</a> ,假设账户名为username</p></blockquote><h3><span id="chuang-jian-cang-ku">创建仓库</span><a href="#chuang-jian-cang-ku" class="header-anchor">#</a></h3><blockquote><p>创建公开的仓库,假设为username.github.io</p></blockquote><h3><span id="tian-jia-ssh-key">添加SSH Key</span><a href="#tian-jia-ssh-key" class="header-anchor">#</a></h3><p><strong>注意</strong> 如果在部署时遇到权限问题，很有可能是因为没有添加ssh key.<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -C "your email"</span><br><span class="line">cat ~/.ssh/id_rsa.pub 复制到剪切板</span><br><span class="line">打开github -&gt; setting -&gt; SSH Key -&gt; add ssh-key 粘贴</span><br></pre></td></tr></table></figure></p><h3><span id="ben-di-hexo-bu-shu-dao-github">本地Hexo部署到Github</span><a href="#ben-di-hexo-bu-shu-dao-github" class="header-anchor">#</a></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save (如果报错:Deployer not found :git就是没有执行改命令)</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line">成功部署即可访问username.github.io</span><br></pre></td></tr></table></figure><h2><span id="ge-xing-hua-pei-zhi">个性化配置</span><a href="#ge-xing-hua-pei-zhi" class="header-anchor">#</a></h2><h3><span id="zhan-dian-pei-zhi-wen-jian-config-yml">站点配置文件_config.yml</span><a href="#zhan-dian-pei-zhi-wen-jian-config-yml" class="header-anchor">#</a></h3><ul><li>这里是我的配置文件，大体上功能和英文名字对应，容易理解，默认的地方没有修改，中文注释的地方可以自由修改。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site 网站基础配置</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Jhai.Dai's</span>  <span class="string">Blog</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">不积跬步无以至千里，不积小流无以成江海</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">山不在高有仙则灵,水不在深有龙则灵</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Jhai.Dai</span></span><br><span class="line"><span class="attr">email:</span> <span class="string">user@gmail.com</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL #这项暂不配置，绑定域名后，欲创建sitemap.xml需要配置该项</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">https://username.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">README.md</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing </span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span>  <span class="comment">#资源文件夹，比如图片、视频等</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  backtick_code_block:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  auto_detect:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  tab_replace:</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  order_by:</span> <span class="bullet">-date</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format </span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination 每页显示文章数，可以自定义，贴主设置的是10</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions 这里配置站点所用主题和插件，暂时默认</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment 部署配置</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="string">git@github.com:username/username.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h3><span id="zhu-ti-pei-zhi-wen-jian-config-yml">主题配置文件_config.yml</span><a href="#zhu-ti-pei-zhi-wen-jian-config-yml" class="header-anchor">#</a></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span><span class="string">网站logo</span></span><br><span class="line"><span class="attr">favicon:</span></span><br><span class="line"><span class="attr">  small:</span> <span class="string">/images/favicon-16x16-next.png</span></span><br><span class="line"><span class="attr">  medium:</span> <span class="string">/images/favicon-32x32-next.png</span></span><br><span class="line"><span class="number">2.</span><span class="string">github</span> <span class="string">彩带</span></span><br><span class="line"><span class="attr">github_banner:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  permalink:</span> <span class="attr">https://github.com/username</span></span><br><span class="line"><span class="number">3.</span><span class="string">菜单</span></span><br><span class="line"><span class="string">以tags为例，tags是标签，/tags表示路径，位于:source/tags，||后面的tags表示</span> <span class="string">hexo使用的图标(名字要在FontAwsome库中存在才行)，配置好之后要创建对应的目录结构：hexo</span> <span class="string">new</span> <span class="string">page</span> <span class="string">"tags"</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span>                          <span class="string">//主页</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span>          <span class="string">//归档</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span>           <span class="string">//分类</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span>                     <span class="string">//标签</span></span><br><span class="line"><span class="attr">  about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span>                   <span class="string">//关于</span></span><br><span class="line">  <span class="comment">#resources: /resources || download         //资源</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar        //日程表</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap        //站点地图</span></span><br><span class="line"><span class="attr">  commonweal:</span> <span class="string">/404.html</span> <span class="string">||</span> <span class="string">heartbeat</span>          <span class="string">//公益404</span></span><br><span class="line"><span class="attr">menu_settings:</span></span><br><span class="line"><span class="attr">  icons:</span> <span class="literal">true</span> <span class="comment">#设置成true 显示图片</span></span><br><span class="line"><span class="number">4.</span><span class="string">社交账号</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/jasonhavend</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line"><span class="attr">  E-Mail:</span> <span class="attr">mailto:jhai.dear@gmail.com</span> <span class="string">||</span> <span class="string">envelope</span></span><br><span class="line"><span class="attr">  Weibo:</span> <span class="attr">https://weibo.com/5338420153/info</span> <span class="string">||</span> <span class="string">weibo</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class="line"><span class="attr">social_icons:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span> <span class="comment">#开启图标</span></span><br><span class="line"><span class="number">5.</span><span class="string">头像</span></span><br><span class="line"><span class="attr">avatar:</span> </span><br><span class="line"><span class="attr">  url:</span> <span class="string">/images/avatar.jpg</span> <span class="comment">#图片位置在themes/主题/source/images/</span></span><br><span class="line"><span class="number">6.</span><span class="string">文章目录</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  max_depth:</span> <span class="number">6</span></span><br><span class="line"><span class="number">7.</span><span class="string">侧边栏</span></span><br><span class="line"><span class="attr">sidebar:</span></span><br><span class="line"><span class="attr">  position:</span> <span class="string">left</span></span><br><span class="line"><span class="attr">  display:</span> <span class="string">post</span></span><br><span class="line"><span class="number">8.</span><span class="string">返回顶端</span></span><br><span class="line"><span class="attr">back2top:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="number">9.</span><span class="string">文本对齐</span></span><br><span class="line"><span class="attr">text_align:</span></span><br><span class="line"><span class="attr">  desktop:</span> <span class="string">justify</span></span><br><span class="line"><span class="attr">  mobile:</span> <span class="string">justify</span></span><br><span class="line"><span class="number">10.</span><span class="string">首页文章显示摘要</span></span><br><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  length:</span> <span class="number">150</span>     <span class="comment"># 截取长度为150个字符</span></span><br><span class="line"><span class="number">11.</span><span class="string">阅读更多</span></span><br><span class="line"><span class="attr">read_more_btn:</span> <span class="literal">true</span></span><br><span class="line"><span class="number">12.</span><span class="string">支付奖励</span></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="comment">#wechatpay: /images/wechatpay.png</span></span><br><span class="line">  <span class="comment">#alipay: /images/alipay.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br><span class="line"><span class="number">13.</span><span class="string">高亮模式</span></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">normal</span></span><br><span class="line"><span class="number">14.</span><span class="string">数学渲染支持</span></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="number">15.</span><span class="string">是否支持分享</span></span><br><span class="line"><span class="attr">likely:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="number">16.</span><span class="string">站内搜索</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="number">17.</span><span class="string">显示阅读次数</span></span><br><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_visitors:</span> <span class="literal">true</span></span><br><span class="line"><span class="number">18.</span><span class="string">评论插件</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  githubID:</span> <span class="string">github帐号</span>  <span class="comment"># 例：123   </span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">仓库名称</span>   <span class="comment"># 例：123.github.io</span></span><br><span class="line"><span class="attr">  ClientID:</span> <span class="string">Client</span> <span class="string">ID</span></span><br><span class="line"><span class="attr">  ClientSecret:</span> <span class="string">Client</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">  adminUser:</span> <span class="string">github帐号</span> <span class="comment">#指定可初始化评论账户</span></span><br><span class="line"><span class="attr">  distractionFreeMode:</span> <span class="literal">true</span></span><br><span class="line"><span class="number">19.</span><span class="string">修改文章底部的那个带#号的标签</span></span><br><span class="line"><span class="string">修改模板</span> <span class="string">/themes/next/layout/_macro/post.swig，搜索</span> <span class="string">rel="tag"&gt;#，将</span> <span class="comment"># 换成&lt;i class="fa fa-tag"&gt;&lt;/i&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="zhi-chi-markdown-mu-lu">支持markdown目录</span><a href="#zhi-chi-markdown-mu-lu" class="header-anchor">#</a></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">首先，安装一个hexo-toc的插件</span></span><br><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-toc</span> <span class="bullet">--save</span></span><br><span class="line"><span class="string">然后，配置一下站点配置文件_config.yml:</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line"><span class="attr">  maxdepth:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">  class:</span> <span class="string">toc</span></span><br><span class="line"><span class="attr">  slugify:</span> <span class="string">transliteration</span></span><br><span class="line"><span class="attr">  decodeEntities:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  anchor:</span></span><br><span class="line"><span class="attr">    position:</span> <span class="string">after</span></span><br><span class="line"><span class="attr">    symbol:</span> <span class="string">'#'</span></span><br><span class="line"><span class="attr">    style:</span> <span class="string">header-anchor</span></span><br><span class="line"><span class="string">在Markdown文章中加入TOC的占位符：</span></span><br><span class="line"><span class="string">&lt;!--</span> <span class="string">toc</span> <span class="bullet">--&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="tian-jia-jin-du-tiao">添加进度条</span><a href="#tian-jia-jin-du-tiao" class="header-anchor">#</a></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo-path&#125;/themes/next/layout/_partials/head/head.swig中顶部加入如下代码</span></span><br><span class="line"><span class="string">&lt;script</span> <span class="string">src="//cdn.bootcss.com/pace/1.0.2/pace.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;link</span> <span class="string">href="//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css"</span> <span class="string">rel="stylesheet"&gt;</span></span><br><span class="line"><span class="string">&lt;style&gt;</span></span><br><span class="line"><span class="string">.pace</span> <span class="string">.pace-progress</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">    background:</span> <span class="comment">#f6a427; /*进度条颜色*/</span></span><br><span class="line"><span class="attr">    height:</span> <span class="number">3</span><span class="string">px;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.pace</span> <span class="string">.pace-progress-inner</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">     box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10</span><span class="string">px</span> <span class="comment">#1E92FB, 0 0 5px     #1E92FB; /*阴影颜色*/</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.pace</span> <span class="string">.pace-activity</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">    border-top-color:</span> <span class="comment">#1E92FB;    /*上边框颜色*/</span></span><br><span class="line"><span class="attr">    border-left-color:</span> <span class="comment">#1E92FB;    /*左边框颜色*/</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="tian-jia-rss">添加RSS</span><a href="#tian-jia-rss" class="header-anchor">#</a></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">安装</span></span><br><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="bullet">--save</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"></span><br><span class="line"><span class="string">站点_config.yml文件</span></span><br><span class="line"><span class="attr">pligins:</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"></span><br><span class="line"><span class="string">主题_config.yml文件</span></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure><h3><span id="tong-ji-zi-fu-yue-du-shi-jian">统计字符+阅读时间</span><a href="#tong-ji-zi-fu-yue-du-shi-jian" class="header-anchor">#</a></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">安装</span></span><br><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-symbols-count-time</span> <span class="bullet">--save</span></span><br><span class="line"></span><br><span class="line"><span class="string">修改</span> <span class="string">站点_config.yml文件</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line"> <span class="comment">#文章内是否显示</span></span><br><span class="line"><span class="attr">  symbols:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  time:</span> <span class="literal">true</span></span><br><span class="line"> <span class="comment"># 网页底部是否显示</span></span><br><span class="line"><span class="attr">  total_symbols:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_time:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">修改</span> <span class="string">主题_config.yml文件</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line"><span class="attr">  separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#文章中的显示是否显示文字（本文字数|阅读时长） </span></span><br><span class="line"><span class="attr">  item_text_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#网页底部的显示是否显示文字（站点总字数|站点阅读时长） </span></span><br><span class="line"><span class="attr">  item_text_total:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Average Word Length (chars count in word)</span></span><br><span class="line"><span class="attr">  awl:</span> <span class="number">4</span></span><br><span class="line">  <span class="comment"># Words Per Minute</span></span><br><span class="line"><span class="attr">  wpm:</span> <span class="number">275</span></span><br></pre></td></tr></table></figure><h3><span id="pdf">PDF</span><a href="#pdf" class="header-anchor">#</a></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">参考</span> <span class="attr">https://blog.csdn.net/wugenqiang/article/details/88377669</span></span><br></pre></td></tr></table></figure><h3><span id="zi-ding-yi-wen-zhang-pai-xu">自定义文章排序</span><a href="#zi-ding-yi-wen-zhang-pai-xu" class="header-anchor">#</a></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">默认是按照时间顺序</span></span><br><span class="line"><span class="string">参考</span> <span class="attr">https://www.jianshu.com/p/42a4efcdf8d7</span></span><br></pre></td></tr></table></figure><h3><span id="wen-zhang-mo-wei-tong-yi-tian-jia-ben-wen-jie-shu-biao-ji">文章末尾统一添加“本文结束”标记</span><a href="#wen-zhang-mo-wei-tong-yi-tian-jia-ben-wen-jie-shu-biao-ji" class="header-anchor">#</a></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">在路径</span> <span class="string">\themes\next\layout\_macro</span> <span class="string">中新建</span> <span class="string">passage-end-tag.swig</span> <span class="string">文件,并添加以下内容：</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line">    <span class="string">&#123;%</span> <span class="string">if</span> <span class="string">not</span> <span class="string">is_index</span> <span class="string">%&#125;</span></span><br><span class="line">        <span class="string">&lt;div</span> <span class="string">style="text-align:center;color:</span> <span class="comment">#ccc;font-size:20px;"&gt;-------------&amp;nbsp;本文结束&amp;nbsp;&amp;nbsp;&lt;i class="fa fa-paw"&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;感谢您的阅读&amp;nbsp;-------------&lt;/div&gt;</span></span><br><span class="line">    <span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">打开\themes\next\layout\_macro\post.swig文件，在post-body</span> <span class="string">之后，</span> <span class="string">post-footer</span> <span class="string">之前添加如下内容：</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line">      <span class="string">&#123;%</span> <span class="string">if</span> <span class="string">not</span> <span class="string">is_index</span> <span class="string">%&#125;</span></span><br><span class="line">        <span class="string">&#123;%</span> <span class="string">include</span> <span class="string">'passage-end-tag.swig'</span> <span class="string">%&#125;</span></span><br><span class="line">      <span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="xiang-guan-lian-jie">相关链接</span><a href="#xiang-guan-lian-jie" class="header-anchor">#</a></h2><ul><li><a href="https://hexo.io/zh-cn" target="_blank" rel="noopener">hexo 官网</a></li><li><a href="https://github.com/" target="_blank" rel="noopener">github 官网</a></li><li><a href="https://nodejs.org/zh-cn" target="_blank" rel="noopener">node 官网</a></li><li><a href="http://www.fontawesome.com.cn/" target="_blank" rel="noopener">FontAwsome 中文网</a></li><li><a href="https://www.cnblogs.com/php-linux/p/8416122.html" target="_blank" rel="noopener">个性化Hexo</a></li></ul>]]></content>
    
    <summary type="html">
    
      本文从Hexo和Github两部分总结关于GitPages部署个人博客以及相关的配置，一是为了自己防止重新搭建时忘记在网上浪费太多时间；二是为了帮助更多新手少走弯路，节约时间，最后将常用的基本配置总结了一下，总结的配置并不全面，但是基本需求满足了。
    
    </summary>
    
      <category term="环境搭建" scheme="https://deardjh.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://deardjh.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
